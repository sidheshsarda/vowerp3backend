name: Build and Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Install Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: |
          aws_account_id=$(aws sts get-caller-identity --query "Account" --output text)
          docker build -t $aws_account_id.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pybackendfast:latest .

      # Step 6: Push Docker Image to Amazon ECR
      - name: Push Docker Image
        run: |
          aws_account_id=$(aws sts get-caller-identity --query "Account" --output text)
          docker push $aws_account_id.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/pybackendfast:latest

      # Step 7: Update ECS Service
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster vowerp3backend \
            --service pybackend-service \
            --force-new-deployment
